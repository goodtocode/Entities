@page
@model GoodToCode.Entity.Person.IndexModel

@using  GoodToCode.Entity.Person;

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>

<form method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group">
        <label asp-for="Criteria.FirstName" class="control-label"></label>
        <input asp-for="Criteria.FirstName" class="form-control" />
        <span asp-validation-for="Criteria.FirstName" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Criteria.LastName" class="control-label"></label>
        <input asp-for="Criteria.LastName" class="form-control" />
        <span asp-validation-for="Criteria.LastName" class="text-danger"></span>
    </div>
    <div class="form-group">
        <input type="submit" value="Search" class="btn btn-primary" />
    </div>
</form>
<div class="row">
    <div class="col-xs-offset-1 col-xs-10 ">
        @if (!ViewData.ModelState.IsValid)
        {
            @Html.ValidationSummary(false, "Action resulted in...", new { @class = "text-danger" })
        }
        else
        {
            <p class="text-info">@TempData[IndexModel.ResultMessage]</p>
        }
    </div>
</div>
@if (Model.Results?.Count > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Results[0].FirstName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Results[0].LastName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Results[0].GenderId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Results[0].BirthDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Results[0].Key)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Results)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.GenderId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BirthDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Key)
                    </td>
                    <td>
                        <a asp-page="./Edit" asp-route-id="@item.Key">Edit</a> |
                        <a asp-page="./Details" asp-route-id="@item.Key">Details</a> |
                        <a asp-page="./Delete" asp-route-id="@item.Key">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}