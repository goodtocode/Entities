@page
@model GoodToCode.Entity.Person.DeleteModel

@using GoodToCode.Entity.Person

@{
    ViewData["Title"] = "Person Delete";
}

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Movie</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Person.FirstName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Person.FirstName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Person.LastName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Person.LastName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Person.BirthDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Person.BirthDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Person.GenderId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Person.GenderId)
        </dd>
    </dl>

    <form method="post">
        <input type="hidden" asp-for="Person.Key" />
        <input type="submit" value="Delete" class="btn btn-danger" /> |
        <a asp-page="./Index">Back to List</a>
    </form>
    <div class="row">
        <div class="col-xs-offset-1 col-xs-10">
            @if (!ViewData.ModelState.IsValid)
            {
                @Html.ValidationSummary(false, DeleteModel.ValidationSummaryMessage, new { @class = "text-danger" })
            }
            else
            {
                <p class="text-info">@TempData[DeleteModel.ResultMessage]</p>
            }
        </div>
    </div>
</div>


