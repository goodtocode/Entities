@model GoodToCode.Entity.Person.PersonDto
@using GoodToCode.Extensions
@using GoodToCode.Entity.WebApp
@using GoodToCode.Entity.Person

<div id="section-delete" class="section-light">
    <div class="section-contents">
        <form action="~/@(PersonController.ControllerName)/@(PersonController.DeleteAction)" method="post" class="form-horizontal" role="form">
            <div class="section-header">Delete a Person</div>
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.Key)
            <div class="form-group row">
                @Html.LabelFor(m => m.Id, "Id", new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.LabelFor(m => m.Id, Model.Id == Defaults.Integer ? Defaults.String : Model.Id.ToString(), new { @class = "control-label" })
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-3">First Name</div>
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.FirstName, Model.FirstName, new { @class = "form-control", @readonly = "readonly" })
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-3">Last Name</div>
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.LastName, Model.LastName, new { @class = "form-control", @readonly = "readonly" })
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-3">Birth Date</div>
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.BirthDate, Model.BirthDate == Defaults.Date ? Defaults.String : Model.BirthDate.ToString("MM/dd/yyyy"), new { @id = "lblBirthDate", @class = "form-control", @readonly = "readonly" })
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-3">Gender</div>
                <div class="col-sm-9">
                    @Html.TextBox("txtGender", GenderList.GetAll().Where(y => y.Key == Model.GenderId).FirstOrDefault().Value ?? "Not Selected", new { @class = "form-control", @readonly = "readonly" })
                </div>
            </div>
            <button type="button" id="btnSearch" class="btn btn-primary" onclick="window.location.href='@Url.Action(PersonSearchController.SearchAction, PersonSearchController.ControllerName)'">Back to Search</button>
            <button type="submit" class="btn btn-primary">Delete Person</button>
        </form>
        <div class="row">
            <div class="col-xs-offset-1 col-xs-10">
                @if (!ViewData.ModelState.IsValid)
                {
                    @Html.ValidationSummary(false, "Action resulted in...", new { @class = "text-danger" })
                }
                else
                {
                    <p class="text-info">@TempData[PersonController.ResultMessage]</p>
                }
            </div>
        </div>
    </div>
</div>